<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="5">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.string.Split" name="Split" testItemId="2" title="Split: a,b,c,d=&gt;,=&gt;Tokens">
      <arguments>
        <argument id="input">
          <value class="value" valueClass="string">a,b,c,d</value>
        </argument>
        <argument id="separator">
          <value class="value" valueClass="string">,</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">Tokens</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="4" title="For Each: {Tokens}=&gt;">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="Tokens"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName"/>
        <argument id="continueOnFailure"/>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="5"/>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="1" title="Set Values: {timable}">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="variable">
                  <path element="timable"/>
                </value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">a</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
  </steps>
</testCase>
